name: Build and publish frontend image

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: eventhubfront

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Debug npm config
        run: |
          echo "---- npm config get registry ----"
          npm config get registry || true
          echo "---- cat .npmrc (if exists) ----"
          if [ -f .npmrc ]; then sed -n '1,200p' .npmrc; else echo ".npmrc not found"; fi
          echo "---- package-lock contains registry urls ----"
          grep -R "registry.npmjs" -n package-lock.json || true

      - name: Debug fetch specific package
        run: |
          echo "Try npm view tsutils ..."
          npm view tsutils version || true
          echo "Try curl to tarball for a likely version (example 3.10.0):"
          curl -I https://registry.npmjs.org/tsutils/-/tsutils-3.10.0.tgz || true
          echo "Try direct npm install of tsutils to see full error:"
          npm i tsutils@3.10.0 --verbose || true

      - name: Install dependencies
        run: npm ci
        working-directory: .

      # Build the React app with production API URL injected
      - name: Build production bundle
        run: npm run build
        env:
          NODE_ENV: production
          REACT_APP_API_URL: ${{ secrets.FRONTEND_API_URL }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (multi-tag)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # два тега: один уникальный по SHA и latest
          tags: |
            ghcr.io/${{ toLower(github.repository_owner) }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ toLower(github.repository_owner) }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            # Если твой Dockerfile использует ARG для передачи переменной, можно передать и сюда
            REACT_APP_API_URL=${{ secrets.FRONTEND_API_URL }}
          # optional: build cache to speed up builds (requires registry support)
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image info
        run: |
          echo "Pushed images:"
          echo "ghcr.io/${{ toLower(github.repository_owner) }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "ghcr.io/${{ toLower(github.repository_owner) }}/${{ env.IMAGE_NAME }}:latest"
